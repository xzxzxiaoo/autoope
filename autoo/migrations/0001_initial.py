# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-12-08 01:55
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_phone', models.IntegerField(null=True, unique=True, verbose_name='用户电话')),
                ('user_describe', models.TextField(blank=True, max_length=150, null=True, verbose_name='用户描述')),
                ('user_avatar', models.ImageField(blank=True, default='avatar/default.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='用户头像')),
                ('user_register_time', models.DateField(null=True, verbose_name='用户注册时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GroupManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=30, unique=True, verbose_name='群名称')),
            ],
            options={
                'verbose_name_plural': '群',
                'verbose_name': '群',
            },
        ),
        migrations.CreateModel(
            name='LocationServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=30, null=True, verbose_name='地址名称')),
            ],
            options={
                'verbose_name_plural': '服务器地址',
                'verbose_name': '服务器地址',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.TextField(max_length=500, verbose_name='信息')),
            ],
            options={
                'verbose_name_plural': '相关信息',
                'verbose_name': '相关信息',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Notification_sendtime', models.DateField(verbose_name='通知发送时间')),
                ('Message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoo.Message', verbose_name='发送的信息')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='被通知用户')),
            ],
            options={
                'verbose_name_plural': '通知',
                'verbose_name': '通知',
            },
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_name', models.CharField(max_length=10, unique=True, verbose_name='权限名称')),
            ],
            options={
                'verbose_name_plural': '权限',
                'verbose_name': '权限',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=30, null=True, verbose_name='项目名称')),
                ('project_create_time', models.DateField(verbose_name='项目创建时间')),
                ('project_power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoo.Power', verbose_name='项目权限')),
            ],
            options={
                'verbose_name_plural': '项目',
                'verbose_name': '项目',
            },
        ),
        migrations.CreateModel(
            name='ProjectforUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ManyToManyField(to='autoo.Project', verbose_name='项目')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '项目所属管理人员',
                'verbose_name': '项目所属管理人员',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=30, unique=True, verbose_name='角色名称')),
                ('role_power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoo.Power', verbose_name='角色权限')),
            ],
            options={
                'verbose_name_plural': '角色',
                'verbose_name': '角色',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_name', models.CharField(max_length=30, null=True, verbose_name='服务器名称')),
                ('server_ip', models.GenericIPAddressField(unique=True, verbose_name='服务器IP地址')),
                ('server_port', models.IntegerField(verbose_name='服务器端口')),
                ('server_login_username', models.CharField(max_length=30, null=True, verbose_name='服务器登录名')),
                ('server_login_password', models.CharField(max_length=30, null=True, verbose_name='服务器密码')),
                ('server_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='autoo.LocationServer', verbose_name='项目位置')),
                ('server_project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='autoo.Project', verbose_name='项目')),
            ],
            options={
                'verbose_name_plural': '服务器',
                'verbose_name': '服务器',
            },
        ),
        migrations.CreateModel(
            name='ServerforUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server', models.ManyToManyField(to='autoo.Server', verbose_name='服务器')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '用户所管理的服务器',
                'verbose_name': '用户所管理的服务器',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.ManyToManyField(to='autoo.GroupManager', verbose_name='群名称')),
                ('manageruser', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '用户群管理',
                'verbose_name': '用户群管理',
            },
        ),
        migrations.CreateModel(
            name='UserSendMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_sendtime', models.DateField(verbose_name='通知发送时间')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoo.Message', verbose_name='信息')),
                ('send_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '发送信息',
                'verbose_name': '发送信息',
            },
        ),
        migrations.AddField(
            model_name='groupmanager',
            name='group_power',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoo.Power', verbose_name='群权限'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_role_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='autoo.Role', verbose_name='角色名称'),
        ),
    ]
